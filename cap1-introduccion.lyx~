#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble

\end_preamble
\use_default_options true
\master maestro-pfg.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Introducción general y objetivos
\end_layout

\begin_layout Standard
En este primer capítulo se hará un breve resumen de qué es el proyecto,
 en qué consiste, y cuáles han sido las motivaciones que me han llevado
 a desarrollarlo.
 Con él se pretende poner en contexto al lector y manifestar el punto de
 vista desde el que se ha enfocado este trabajo.
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Este proyecto consiste en un software de composición musical 
\begin_inset Quotes eld
\end_inset

autónomo
\begin_inset Quotes erd
\end_inset

, capaz de crear composiciones completas a partir de unas especificaciones
 mínimas proporcionadas por el usuario, tales como duración de la obra,
 la tonalidad, el compás, etc.
 Para realizar esta tarea hace uso de un algoritmo genético implementado
 sobre un dominio y una lógica de negocio desarrollados específicamente
 para este propósito.
 Este modelo se ha construido a partir de la librería 
\begin_inset Quotes eld
\end_inset

proxymusic
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Además, también se ha desarrollado un sistema al que se accede a través
 de una interfaz web para proporcionar acceso al usuario final.
 Este sistema está dividido en varios módulos independientes (tratado en
 con más detalle en el capítulo 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Estructura"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 El sistema será el que tome la responsabilidad de interactuar con el usuario
 final u otros sistemas a través de un 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "API"
description "Application programming interface"
literal "false"

\end_inset

 API 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "REST"
description "Representational state transfer"
literal "false"

\end_inset

 REST (documentada y disponible en 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Api-REST"
plural "false"
caps "false"
noprefix "false"

\end_inset

) y de realizar las llamadas a los módulos correspondientes para producir
 los resultados.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/1-introduccion/esquema-backend.svg
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Esquema general servicio REST
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver en la figura, el servicio REST se situaría en el centro
 y actuará como enlace entre el usuario y los demás módulos.
 Por tomar un ejemplo, en el caso de uso principal de solicitar una composición,
 el usuario a través de la aplicación web rellenaría un formulario con las
 especificaciones deseadas y enviaría la solicitud.
 Al pulsar el botón, se haría una validación sencilla del formulario y si
 es correcta se ejecutaría la llamada al método 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTTP"
description "HyperText Transfer Protocol"
literal "true"

\end_inset

HTTP correspondiente contra el servicio REST.
 Este se comunicaría en primer lugar con la base de datos para crear el
 registro de la nueva partitura, y a continuación haría llegar al servicio
 compositor la petición publicando las especificaciones del usuario en una
 cola de mensajería a la que este estaría suscrito.
 Una vez el compositor ha terminado la tarea, le enviaría de nuevo el resultado
 vía REST al servicio central, que depositaría los resultados en el sistema
 de archivos y actualizaría la disponibilidad en la base de datos para que
 el usuario sepa que su composición ha terminado.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Este sistema también dispone de seguridad para restringir su uso o el acceso
 al almacenamiento de otros usuarios, sin embargo dadas las dimensiones
 reducidas del proyecto, no se dispone de un módulo dedicado a ello, sino
 que se trata de un sistema muy simple implementado directamente en el servicio
 central.
 Consiste en un 
\emph on
login
\emph default
 para controlar el acceso a través de la aplicación web, y 
\emph on
tokens
\emph default
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "JWT"
description "JSON Web Token"
literal "false"

\end_inset

 JWT 
\begin_inset Foot
status open

\begin_layout Plain Layout
Los tokens web 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "JSON"
description "JavaScript Object Notation"
literal "false"

\end_inset

JSON son un método estándar que permiten la propagación de identidad y privilegi
os.
 [
\begin_inset CommandInset citation
LatexCommand cite
key "olivera2014jwt"
literal "false"

\end_inset

]
\end_layout

\end_inset

 para securizar los métodos más sensibles del API.
\end_layout

\begin_layout Section
Motivación y objetivos
\end_layout

\begin_layout Standard
En un primer momento, al elegir un proyecto de modalidad específica, mi
 idea era no solo desarrollar un trabajo para presentar como proyecto fin
 de grado, sino crear la base de un trabajo potencialmente más extenso y
 con margen para incorporar nuevas funcionalidades, que me pudiera servir
 en el futuro para nuevas investigaciones, un posible trabajo de fin de
 máster, o simplemente aprender e incorporar nuevas tecnologías, ya que
 siempre resulta más sencillo en un proyecto conocido.
 Por ello, quería encontrar un problema en el que me sintiera cómodo y me
 resultara interesante.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Elegir la temática del proyecto fue algo relativamente sencillo.
 Por una parte pensé que para llevar a cabo un proyecto de una duración
 no muy extensa como es un proyecto de fin de grado, no podría invertir
 demasiado tiempo en estudiar a fondo el dominio y la lógica de negocio.
 Por otra parte, como mencionaba anteriormente, quería un proyecto que me
 resultara interesante y me pudiera servir en el futuro, por lo que decidí
 elegir un tema que ya conociera previamente o al menos tuviera una idea
 general de cómo es el problema y poder plantear diferentes soluciones.
 Por este motivo, el tema elegido fue la música.
 Un área en la que tengo alguna formación, y en la que mucha gente puede
 tener opinión e interés, ya que no es necesario tener conocimientos formales
 para ser un usuario de la herramienta.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Por último, faltaba decidir qué problema en concreto quería resolver y cómo
 lo iba a hacer.
 Por las experiencias que había tenido estudiando durante el grado, tenía
 bastante claro que el campo que más me interesaba era la inteligencia artificia
l, y parecía una ocasión ideal para profundizar algo más en los contenidos
 incluidos en la carrera y tratar de aplicarlos a un problema real, que
 probablemente fuera lo que más echaba en falta en este tipo de asignaturas.
 Tras contemplar varias opciones, me decanté por que el problema fuera la
 composición de obras musicales, algo que sin duda parece muy amplio, y
 por lo tanto abre muchas posibilidades para continuar desarrollando en
 el futuro.
 Es por este motivo que a pesar de que la versión actual esté bastante acotada
 en cuanto a funcionalidad, mi intención siempre ha sido la de desarrollar
 sin cerrar ninguna puerta, pensando en que más adelante se puedan implementar
 nuevas características.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tras una primera fase de búsqueda, he podido observar que la gran mayoría
 de proyectos similares utilizan algoritmos basados en 
\emph on
Deep Learning
\emph default
 alimentados por grandes cantidades de partituras, con resultados realmente
 buenos en algunos casos.
 Sin embargo mi objetivo ha sido emplear otro tipo de algoritmo por varios
 motivos: 
\end_layout

\begin_layout Itemize
Probar si sería posible lograr un resultado aceptable utilizando otra técnica
 que permitiera más flexibilidad y modificabilidad por parte del desarrollador
 o incluso por parte del usuario.
\end_layout

\begin_layout Itemize
Consideré que implementar un algoritmo de 
\emph on
Deep Learning
\emph default
 implicaba un tiempo de aprendizaje demasiado prolongado dada mi formación
 actual y la extensión del proyecto.
\end_layout

\begin_layout Itemize
Probablemente no poseer la infraestructura necesaria para entrenar un algoritmo
 de esas características.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Por ello, ante esta decisión se ha optado por escoger un 
\series bold
algoritmo evolutivo
\series default
 de tipo 
\series bold
genético
\series default
, cuyos argumentos a favor han sido:
\end_layout

\begin_layout Itemize
Capacidad de definir criterios de evaluación por el desarrollador
\end_layout

\begin_layout Itemize
Mayor simplicidad
\end_layout

\begin_layout Itemize
Prescindir de fase de entrenamiento
\end_layout

\begin_layout Standard
Otro aspecto en el que se ha intentado marcar una diferencia con otros proyectos
 es en el formato del resultado final.
 En lugar de producir archivos de audio, los resultados son archivos MusicXML,
 tratando de lograr la máxima rigurosidad en la notación y empleando una
 representación fiel a la teoría musical.
 Esto ofrece la posibilidad de crear partituras con gran precisión y poder
 utilizarlas desde editores como MuseScore o Finale, o exportarlas a formatos
 de lectura o incluso de audio.
 Se puede encontrar más información sobre este formato y el porqué de su
 elección en 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:MusicXML"
plural "false"
caps "false"
noprefix "false"

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A parte del objetivo principal que considero la aplicación del algoritmo
 al problema, también tenía interés en lo que viene siendo la parte de producto
 y aprovechar este proyecto para informarme y ponerme al día en las tecnologías
 y conceptos relacionados con el desarrollo de software a nivel empresarial,
 como 
\emph on
Docker
\emph default
, 
\emph on
Spring
\emph default
, 
\emph on
Kafka
\emph default
, arquitectura hexagonal...
 Como se verá a lo largo de esta memoria, he dedicado gran parte del tiempo
 al desarrollo de un sistema completo con el que interactuar con la librería
 que aplica el algoritmo, haciendo énfasis en algunos de los puntos más
 relevantes en el desarrollo en el ámbito empresarial, como pueden ser la
 escalabilidad y la mantenibilidad.
 Precisamente por lo que comentaba anteriormente acerca de la posible reutilizac
ión de este proyecto, consideré que valía la pena desarrollar este sistema
 como envoltorio en lugar de limitarse a una interfaz por línea de comandos
 o similar, ya que probablemente sea la parte más inmutable en caso de continuar
 evolucionando el proyecto.
 Entre las funciones de este sistema, se encuentran:
\end_layout

\begin_layout Itemize
Gestión de usuarios y roles
\end_layout

\begin_layout Itemize
Seguridad
\end_layout

\begin_layout Itemize
Gestión de almacenamiento
\end_layout

\begin_layout Itemize
Procesamiento distribuido en un servidor
\end_layout

\begin_layout Itemize
Soportar concurrencia y posibilidad de escalar
\end_layout

\begin_layout Standard
Esto me ha llevado también a elaborar una interfaz de usuario web y descubrir
 una parte del desarrollo del software que no había tenido la oportunidad
 de conocer como es el desarrollo de interfaces de usuario, y más en concreto
 la programación web 
\emph on
frontend
\emph default
, haciendo uso de lenguajes nuevos para mí como JavaScript, 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTML"
description "HyperText Markup Language"
literal "false"

\end_inset

HTML y 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CSS"
description "Cascading Style Sheets"
literal "false"

\end_inset

CSS.
 Posteriormente, profundizando más sobre este campo, me he visto en la necesidad
 de probar diversos frameworks de desarrollo, finalmente adoptando AngularJS
 como solución para implementar la interfaz gráfica, aunque para ello no
 partí de cero, sino que parto de una plantilla disponible en GitHub llamada
 
\begin_inset Quotes eld
\end_inset

ngx-admin
\begin_inset Quotes erd
\end_inset

, un 
\emph on
dashboard
\emph default
 de código abierto basado en los componentes de la librería 
\begin_inset Quotes eld
\end_inset

Nebular
\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Dejando a un lado el resultado final de este proyecto, puedo decir que estoy
 muy satisfecho de haber trabajado en él porque me ha dado la oportunidad
 de tratar áreas muy diversas y conocer sus principales tecnologías.
 Desde el tema principal que era la implantación de un algoritmo genético
 hasta el desarrollo de un servicio distribuido y una interfaz web, pasando
 por temas de infraestructura y redes en los que no tenía apenas conocimientos,
 y creándome la necesidad de aplicar flujos de trabajo en plataformas de
 integración continua como 
\emph on
GitHub Actions 
\emph default
y 
\emph on
Jenkins
\emph default
, de los que ni conocía su existencia.
 Es probable que me haya excedido de la extensión que había planeado en
 un principio para este proyecto, pero considero que la experiencia ha sido
 muy positiva y que tras ella, estoy más preparado para decidir a qué área
 de la informática dedicarme.
\end_layout

\end_body
\end_document
